name: micronaut-ci-demo
on:
  push:
    branches:
      - master
      - deploy-to-k8s
jobs:
  build-job:
    name: Build Job
    runs-on: ubuntu-latest
    steps:
      - name: 'Start build job'
        env:
          FOO: bar
        run: |
          echo "Starting the build job. Foo is $FOO."

      - name: 'Checkout'
        uses: actions/checkout@v1

      - name: 'Write Config & Key Files'
        run: |
          mkdir ~/.oci
          echo "[DEFAULT]" >> ~/.oci/config
          echo "user=${{secrets.OCI_USER_OCID}}" >> ~/.oci/config
          echo "fingerprint=${{secrets.OCI_FINGERPRINT}}" >> ~/.oci/config
          echo "pass_phrase=${{secrets.OCI_PASSPHRASE}}" >> ~/.oci/config
          echo "region=${{secrets.OCI_REGION}}" >> ~/.oci/config
          echo "tenancy=${{secrets.OCI_TENANCY_OCID}}" >> ~/.oci/config
          echo "key_file=~/.oci/key.pem" >> ~/.oci/config
          echo "${{secrets.OCI_KEY_FILE}}" >> ~/.oci/key.pem
          # write cloud init file & oci public ssh key
          touch /home/runner/cloud-init.sh
          echo "${{secrets.OCI_PUBLIC_KEY}}" >> /home/runner/.oci/id_oci_demo.pub
          # wallet files needed for running tests
          sudo mkdir /home/runner/work/github-actions-micronaut-demo/github-actions-micronaut-demo/wallet-demodb
          sudo sh -c  'echo "${{secrets.WALLET_CWALLET}}" | base64 -d >> /home/runner/work/github-actions-micronaut-demo/github-actions-micronaut-demo/wallet-demodb/cwallet.sso'
          sudo sh -c  'echo "${{secrets.WALLET_EWALLET}}" | base64 -d >> /home/runner/work/github-actions-micronaut-demo/github-actions-micronaut-demo/wallet-demodb/ewallet.p12'
          sudo sh -c  'echo "${{secrets.WALLET_KEYSTORE}}" | base64 -d >> /home/runner/work/github-actions-micronaut-demo/github-actions-micronaut-demo/wallet-demodb/keystore.jks'
          sudo sh -c  'echo "${{secrets.WALLET_OJDBC}}" | base64 -d >> /home/runner/work/github-actions-micronaut-demo/github-actions-micronaut-demo/wallet-demodb/ojdbc.properties'
          sudo sh -c  'echo "${{secrets.WALLET_SQLNET}}" | base64 -d >> /home/runner/work/github-actions-micronaut-demo/github-actions-micronaut-demo/wallet-demodb/sqlnet.ora'
          sudo sh -c  'echo "${{secrets.WALLET_TNSNAMES}}" | base64 -d >> /home/runner/work/github-actions-micronaut-demo/github-actions-micronaut-demo/wallet-demodb/tnsnames.ora'
          sudo sh -c  'echo "${{secrets.WALLET_TRUSTSTORE}}" | base64 -d >> /home/runner/work/github-actions-micronaut-demo/github-actions-micronaut-demo/wallet-demodb/truststore.jks'

      - name: 'Setup Java'
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: 'Run Tests'
        run: |
          #./gradlew test
          echo "Run tests..."

      - name: 'Assemble JAR'
        run: |
          ./gradlew assemble

      - name: 'Publish Test Report'
        if: always()
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'test-report'
          path: build/reports/tests/test/*

      - name: 'Get Version Number'
        run: |
          echo "::set-env name=VERSION::$(./gradlew properties -q | grep "version:" | awk '{print $2}')"

      - name: 'Publish JAR'
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'github-actions-micronaut-demo-${{env.VERSION}}-all.jar'
          path: build/libs/*-all.jar

      - name: 'Login To OCIR'
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.OCIR_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.OCIR_PASSWORD }}
          DOCKER_REGISTRY_URL: phx.ocir.io

      - name: 'Docker Build'
        run: docker build -t phx.ocir.io/toddrsharp/github-actions-micronaut-demo/github-actions-micronaut-demo:latest .

      - name: 'Docker Push'
        uses: actions-hub/docker@master
        with:
          args: push phx.ocir.io/toddrsharp/github-actions-micronaut-demo/github-actions-micronaut-demo:latest

      - name: 'Test...'
        run: |
          ls -la
          ls -la /home/runner/work/github-actions-micronaut-demo/github-actions-micronaut-demo
      - name: 'Deploy To Kubernetes'
        uses: steebchen/kubectl@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.OKE_KUBE_CONFIG }}
        with:
          args: '"apply -f /home/runner/work/github-actions-micronaut-demo/github-actions-micronaut-demo/k8s/app.yaml"'